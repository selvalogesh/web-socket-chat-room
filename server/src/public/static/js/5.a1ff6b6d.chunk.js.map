{"version":3,"sources":["components/Message/Message.lazy.js","components/Message/index.js","components/Display/Display.js","libs/socketClient.js","components/Display/Display.module.css"],"names":["LazyMessage","lazy","props","fallback","Display","useState","MessagesArray","setMessagesArray","name","text","messageData","setMessageData","useEffect","socketIO","on","data","console","log","off","prevState","concat","length","className","styles","DisplayWrapper","defaultProps","sockerIO","socketClient","module","exports"],"mappings":"2LAEMA,EAAcC,gBAAK,kBAAM,iCCAhBD,EDEC,SAAAE,GAAK,OACnB,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACH,EAAD,eAAiBE,OECfE,EAAU,WAEd,MAAwCC,mBAAS,IAAjD,mBAAKC,EAAL,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,CAACG,KAAK,GAAGC,KAAK,KAA3D,mBAAKC,EAAL,KAAkBC,EAAlB,KAcA,OAZAC,qBAAU,WAKR,OAJAC,IAASC,GAAG,WAAW,SAACC,GACtBJ,EAAeI,GACfC,QAAQC,IAAIF,MAEP,kBAAMF,IAASK,IAAI,cACzB,IAEHN,qBAAU,WACRL,GAAiB,SAAAY,GAAS,OAAIA,EAAUC,OAAO,CAAC,cAAC,EAAD,CAAgCL,KAAML,GAAxBS,EAAUE,eACvE,CAACX,IAGF,qBAAKY,UAAWC,IAAOnB,QAAvB,SACE,qBAAKkB,UAAWC,IAAOC,eAAvB,SACIlB,OAQVF,EAAQqB,aAAe,GAERrB,a,gCCpCf,YAGasB,EAHb,MAGwBC,GAFT,UAIAD,O,mBCLfE,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB","file":"static/js/5.a1ff6b6d.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\n\nconst LazyMessage = lazy(() => import('./Message'));\n\nconst Message = props => (\n  <Suspense fallback={null}>\n    <LazyMessage {...props} />\n  </Suspense>\n);\n\nexport default Message;\n","import LazyMessage from './Message.lazy';\r\n\r\nexport default LazyMessage;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Display.module.css';\n\nimport socketIO from '../../libs/socketClient'\nimport Message from '../Message'\n\nconst Display = () => {\n  \n  let [MessagesArray, setMessagesArray] = useState([])\n  let [messageData, setMessageData] = useState({name:\"\",text:\"\"})\n\n  useEffect(() => {\n    socketIO.on('message', (data) => {\n      setMessageData(data)\n      console.log(data)\n    })\n    return () => socketIO.off('message'); //To unsubscribe all listeners of an event\n  }, [])\n\n  useEffect(() => {\n    setMessagesArray(prevState => prevState.concat([<Message key={prevState.length} data={messageData} />]))\n  }, [messageData])\n\n  return (\n    <div className={styles.Display}>\n      <div className={styles.DisplayWrapper}>\n        { MessagesArray }\n      </div>\n    </div>\n  )\n};\n\nDisplay.propTypes = {};\n\nDisplay.defaultProps = {};\n\nexport default Display;\n","\r\nimport socketClient from 'socket.io-client'\r\nconst SERVER = \"wss://\";\r\n\r\nexport const sockerIO = socketClient(SERVER);\r\n\r\nexport default sockerIO","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__1SGdO\",\"DisplayWrapper\":\"Display_DisplayWrapper__2Bf2F\"};"],"sourceRoot":""}